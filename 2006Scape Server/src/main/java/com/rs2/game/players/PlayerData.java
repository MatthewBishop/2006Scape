package com.rs2.game.players;

public class PlayerData {
	
    String username;
    String playerPass;
    int heightLevel;
    int teleHeight;
    int teleportToX;
    int teleportToY;
    int lastX;
    int lastY;
    int playerRights;
    int xpRate;
    String lastConnectedFrom;
    boolean isBot;
    boolean hideYell;
    int blackMarks;
    boolean lostCannon;
    int myBalls;
    int ratsCaught;
    int cannonX;
    int cannonY;
    int[] removedTasks;
    int SlayerMaster;
    int slayerTask;
    int slayerPoints;
    int taskAmount;
    int cwGames;
    int crystalBowArrowCount;
    int randomActions;
    boolean debugMode;
    int globalDamageDealt;
    int skullTimer;
    int recoilHits;
    int brightness;
    boolean spiritTree;
    boolean npcCanAttack;
    boolean rope;
    boolean rope2;
    boolean recievedMask;
    boolean recievedReward;
    boolean splitChat;
    boolean hasPaid;
    boolean poison;
    boolean closeTutorialInterface;
    boolean canWalkTutorial;
    boolean needsNewTask;
    boolean musicOn;
    int[][] barrowsNpcs;
    int summonId;
    boolean hasNpc;
    int barrowsKillCount;
    boolean luthas;
    boolean village;
    long lastThieve;
    long homeTele;
    int tutorialProgress;
    boolean strongHold;
    boolean filter;
    boolean ratdied2;
    boolean randomEventsEnabled;
    int questStages;
    int cookAss;
    int bananas;
    int sheepShear;
    int runeMist;
    int doricQuest;
    int blackKnight;
    int shieldArrav;
    int pirateTreasure;
    int romeojuliet;
    int vampSlayer;
    int gertCat;
    int witchspot;
    int lostCity;
    int ectoTokens;
    int easterEvent;
    int restGhost;
    int impsC;
    int knightS;
    int lastH;
    boolean hasStarter;
    boolean canSpeak;
    int questPoints;
    int votePoints;
    int playerMagicBook;
    double specAmount;
    int randomCoffin;
    boolean isRunning2;
    double playerEnergy;
    long teleBlockDelay;
    int teleBlockLength;
    long lastYell;
    int pcPoints;
    int magePoints;
    int autoRet;
    boolean accountFlagged;
    int lastLoginDate;
    boolean hasBankpin;
    boolean setPin;
    int pinDeleteDateRequested;
    boolean requestPinDelete;
    int bankPin1;
    int bankPin2;
    int bankPin3;
    int bankPin4;
    int waveId;
    int ptjob;
    String creationAddress;
    boolean[] unlocked;
    int[] voidStatus;
    int killCount;
    int fightMode;
    int ectofuntusWorshipped;
    int graveyardPoints;
    int alchemyPoints;
    int enchantmentPoints;
    int telekineticPoints;
    int telekineticMazesSolved;
    boolean unlockedBonesToPeaches;
    String discordCode;
    int[] playerEquipment;
    int[] playerEquipmentN;
    int[] playerAppearance;
    int[] playerLevel;
	int[] playerXP;
    int[] playerItems;
    int[] playerItemsN;
    int[] bankItems;
    int[] bankItemsN;
    int[] bankItemsV;
    long[] friends;
    long[] ignores;
    
    /**
     * Creates a new POJO to represent the player. This object can be passed to another thread for serialization.
     * 
     * @param player The player to be serialized.
     */
    public PlayerData(Player player) {
		this.username = player.playerName;
		this.playerPass = player.playerPass;
		this.heightLevel = player.heightLevel;
		this.teleHeight = player.teleHeight;
		this.teleportToX = player.teleportToX;
		this.teleportToY = player.teleportToY;
		this.lastX = player.lastX;
		this.lastY = player.lastY;
		this.playerRights = player.playerRights;
		this.xpRate = player.xpRate;
		this.lastConnectedFrom = player.lastConnectedFrom;
		this.isBot = player.isBot;
		this.hideYell = player.hideYell;
		this.blackMarks = player.blackMarks;
		this.lostCannon = player.lostCannon;
		this.myBalls = player.getCannon().myBalls;
		this.ratsCaught = player.ratsCaught;
		this.cannonX = player.cannonX;
		this.cannonY = player.cannonY;
		this.removedTasks = player.removedTasks;
		this.SlayerMaster = player.SlayerMaster;
		this.slayerTask = player.slayerTask;
		this.slayerPoints = player.slayerPoints;
		this.taskAmount = player.taskAmount;
		this.cwGames = player.cwGames;
		this.crystalBowArrowCount = player.crystalBowArrowCount;
		this.randomActions = player.randomActions;
		this.debugMode = player.debugMode;
		this.globalDamageDealt = player.globalDamageDealt;
		this.skullTimer = player.skullTimer;
		this.recoilHits = player.recoilHits;
		this.brightness = player.brightness;
		this.spiritTree = player.spiritTree;
		this.npcCanAttack = player.npcCanAttack;
		this.rope = player.rope;
		this.rope2 = player.rope2;
		this.recievedMask = player.recievedMask;
		this.recievedReward = player.recievedReward;
		this.splitChat = player.splitChat;
		this.hasPaid = player.hasPaid;
		this.poison = player.poison;
		this.closeTutorialInterface = player.closeTutorialInterface;
		this.canWalkTutorial = player.canWalkTutorial;
		this.needsNewTask = player.needsNewTask;
		this.musicOn = player.musicOn;
		this.barrowsNpcs = player.barrowsNpcs;
		this.summonId = player.summonId;
		this.hasNpc = player.hasNpc;
		this.barrowsKillCount = player.barrowsKillCount;
		this.luthas = player.luthas;
		this.village = player.village;
		this.lastThieve = player.lastThieve;
		this.homeTele = player.homeTele;
		this.tutorialProgress = player.tutorialProgress;
		this.strongHold = player.strongHold;
		this.filter = player.filter;
		this.ratdied2 = player.ratdied2;
		this.randomEventsEnabled = player.randomEventsEnabled;
		this.questStages = player.questStages;
		this.cookAss = player.cookAss;
		this.bananas = player.bananas;
		this.sheepShear = player.sheepShear;
		this.runeMist = player.runeMist;
		this.doricQuest = player.doricQuest;
		this.blackKnight = player.blackKnight;
		this.shieldArrav = player.shieldArrav;
		this.pirateTreasure = player.pirateTreasure;
		this.romeojuliet = player.romeojuliet;
		this.vampSlayer = player.vampSlayer;
		this.gertCat = player.gertCat;
		this.witchspot = player.witchspot;
		this.lostCity = player.lostCity;
		this.ectoTokens = player.ectoTokens;
		this.easterEvent = player.easterEvent;
		this.restGhost = player.restGhost;
		this.impsC = player.impsC;
		this.knightS = player.knightS;
		this.lastH = player.lastH;
		this.hasStarter = player.hasStarter;
		this.canSpeak = player.canSpeak;
		this.questPoints = player.questPoints;
		this.votePoints = player.votePoints;
		this.playerMagicBook = player.playerMagicBook;
		this.specAmount = player.specAmount;
		this.randomCoffin = player.randomCoffin;
		this.isRunning2 = player.isRunning2;
		this.playerEnergy = player.playerEnergy;
		this.teleBlockDelay = player.teleBlockDelay;
		this.teleBlockLength = player.teleBlockLength;
		this.lastYell = player.lastYell;
		this.pcPoints = player.pcPoints;
		this.magePoints = player.magePoints;
		this.autoRet = player.autoRet;
		this.accountFlagged = player.accountFlagged;
		this.lastLoginDate = player.lastLoginDate;
		this.hasBankpin = player.hasBankpin;
		this.setPin = player.setPin;
		this.pinDeleteDateRequested = player.pinDeleteDateRequested;
		this.requestPinDelete = player.requestPinDelete;
		this.bankPin1 = player.bankPin1;
		this.bankPin2 = player.bankPin2;
		this.bankPin3 = player.bankPin3;
		this.bankPin4 = player.bankPin4;
		this.waveId = player.waveId;
		this.ptjob = player.ptjob;
		this.creationAddress = player.creationAddress;
		this.unlocked = player.getPlayList().unlocked;
		this.voidStatus = player.voidStatus;
		this.killCount = player.killCount;
		this.fightMode = player.fightMode;
		this.ectofuntusWorshipped = player.ectofuntusWorshipped;
		this.graveyardPoints = player.graveyardPoints;
		this.alchemyPoints = player.alchemyPoints;
		this.enchantmentPoints = player.enchantmentPoints;
		this.telekineticPoints = player.telekineticPoints;
		this.telekineticMazesSolved = player.telekineticMazesSolved;
		this.unlockedBonesToPeaches = player.unlockedBonesToPeaches;
		this.discordCode = player.discordCode;
		this.playerEquipment = player.playerEquipment;
		this.playerEquipmentN = player.playerEquipmentN;
		this.playerAppearance = player.playerAppearance;
		this.playerLevel = player.playerLevel;
		this.playerXP = player.playerXP;
		this.playerItems = player.playerItems;
		this.playerItemsN = player.playerItemsN;
		this.bankItems = player.bankItems;
		this.bankItemsN = player.bankItemsN;
		this.bankItemsV = player.bankItemsV;
		this.friends = player.friends;
		this.ignores = player.ignores;
	}
    
    public void loadPlayer(Player player) {
		player.playerName = this.username;
		player.playerPass = this.playerPass;
		player.heightLevel = this.heightLevel;
		player.teleHeight = this.teleHeight;
		player.teleportToX = this.teleportToX;
		player.teleportToY = this.teleportToY;
		player.lastX = this.lastX;
		player.lastY = this.lastY;
		player.playerRights = this.playerRights;
		player.xpRate = this.xpRate;
		player.lastConnectedFrom = this.lastConnectedFrom;
		player.isBot = this.isBot;
		player.hideYell = this.hideYell;
		player.blackMarks = this.blackMarks;
		player.lostCannon = this.lostCannon;
		player.getCannon().myBalls = this.myBalls;
		player.ratsCaught = this.ratsCaught;
		player.cannonX = this.cannonX;
		player.cannonY = this.cannonY;
		player.removedTasks = this.removedTasks;
		player.SlayerMaster = this.SlayerMaster;
		player.slayerTask = this.slayerTask;
		player.slayerPoints = this.slayerPoints;
		player.taskAmount = this.taskAmount;
		player.cwGames = this.cwGames;
		player.crystalBowArrowCount = this.crystalBowArrowCount;
		player.randomActions = this.randomActions;
		player.debugMode = this.debugMode;
		player.globalDamageDealt = this.globalDamageDealt;
		player.skullTimer = this.skullTimer;
		player.recoilHits = this.recoilHits;
		player.brightness = this.brightness;
		player.spiritTree = this.spiritTree;
		player.npcCanAttack = this.npcCanAttack;
		player.rope = this.rope;
		player.rope2 = this.rope2;
		player.recievedMask = this.recievedMask;
		player.recievedReward = this.recievedReward;
		player.splitChat = this.splitChat;
		player.hasPaid = this.hasPaid;
		player.poison = this.poison;
		player.closeTutorialInterface = this.closeTutorialInterface;
		player.canWalkTutorial = this.canWalkTutorial;
		player.needsNewTask = this.needsNewTask;
		player.musicOn = this.musicOn;
		player.barrowsNpcs = this.barrowsNpcs;
		player.summonId = this.summonId;
		player.hasNpc = this.hasNpc;
		player.barrowsKillCount = this.barrowsKillCount;
		player.luthas = this.luthas;
		player.village = this.village;
		player.lastThieve = this.lastThieve;
		player.homeTele = this.homeTele;
		player.tutorialProgress = this.tutorialProgress;
		player.strongHold = this.strongHold;
		player.filter = this.filter;
		player.ratdied2 = this.ratdied2;
		player.randomEventsEnabled = this.randomEventsEnabled;
		player.questStages = this.questStages;
		player.cookAss = this.cookAss;
		player.bananas = this.bananas;
		player.sheepShear = this.sheepShear;
		player.runeMist = this.runeMist;
		player.doricQuest = this.doricQuest;
		player.blackKnight = this.blackKnight;
		player.shieldArrav = this.shieldArrav;
		player.pirateTreasure = this.pirateTreasure;
		player.romeojuliet = this.romeojuliet;
		player.vampSlayer = this.vampSlayer;
		player.gertCat = this.gertCat;
		player.witchspot = this.witchspot;
		player.lostCity = this.lostCity;
		player.ectoTokens = this.ectoTokens;
		player.easterEvent = this.easterEvent;
		player.restGhost = this.restGhost;
		player.impsC = this.impsC;
		player.knightS = this.knightS;
		player.lastH = this.lastH;
		player.hasStarter = this.hasStarter;
		player.canSpeak = this.canSpeak;
		player.questPoints = this.questPoints;
		player.votePoints = this.votePoints;
		player.playerMagicBook = this.playerMagicBook;
		player.specAmount = this.specAmount;
		player.randomCoffin = this.randomCoffin;
		player.isRunning2 = this.isRunning2;
		player.playerEnergy = this.playerEnergy;
		player.teleBlockDelay = this.teleBlockDelay;
		player.teleBlockLength = this.teleBlockLength;
		player.lastYell = this.lastYell;
		player.pcPoints = this.pcPoints;
		player.magePoints = this.magePoints;
		player.autoRet = this.autoRet;
		player.accountFlagged = this.accountFlagged;
		player.lastLoginDate = this.lastLoginDate;
		player.hasBankpin = this.hasBankpin;
		player.setPin = this.setPin;
		player.pinDeleteDateRequested = this.pinDeleteDateRequested;
		player.requestPinDelete = this.requestPinDelete;
		player.bankPin1 = this.bankPin1;
		player.bankPin2 = this.bankPin2;
		player.bankPin3 = this.bankPin3;
		player.bankPin4 = this.bankPin4;
		player.waveId = this.waveId;
		player.ptjob = this.ptjob;
		player.creationAddress = this.creationAddress;
		player.getPlayList().unlocked = this.unlocked;
		player.voidStatus = this.voidStatus;
		player.killCount = this.killCount;
		player.fightMode = this.fightMode;
		player.ectofuntusWorshipped = this.ectofuntusWorshipped;
		player.graveyardPoints = this.graveyardPoints;
		player.alchemyPoints = this.alchemyPoints;
		player.enchantmentPoints = this.enchantmentPoints;
		player.telekineticPoints = this.telekineticPoints;
		player.telekineticMazesSolved = this.telekineticMazesSolved;
		player.unlockedBonesToPeaches = this.unlockedBonesToPeaches;
		player.discordCode = this.discordCode;
		player.playerEquipment = this.playerEquipment;
		player.playerEquipmentN = this.playerEquipmentN;
		player.playerAppearance = this.playerAppearance;
		player.playerLevel = this.playerLevel;
		player.playerXP = this.playerXP;
		player.playerItems = this.playerItems;
		player.playerItemsN = this.playerItemsN;
		player.bankItems = this.bankItems;
		player.bankItemsN = this.bankItemsN;
		player.bankItemsV = this.bankItemsV;
		player.friends = this.friends;
		player.ignores = this.ignores;
    }
}